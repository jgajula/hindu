<div class="modal_close"><a class="close" data-dismiss="modal">Ã—</a></div>

<div class="sign_up_content_wrapper">

  <div class="sign_up_content">

        <%= form_for @user, validate:true, url: {action: "create"} do |u| %>
            <div class="form_group">
              <%=  u.label :email %>
              <%= u.text_field :email %>
              <div id="user_email_error"></div>
            </div>

            <div class="form_group">
              <%=  u.label :password %>
              <%=  u.password_field :password %>
            </div>

            <div class="form_group">
              <%=  u.label :password_confirmation %>
              <%=  u.password_field :password_confirmation %>
            </div>

            <div class="form-group">
              <%=  u.label :zipcode %>
              <%=  u.text_field :zipcode %>
            </div>

            <div class="form-group">
              <%= u.check_box :toc %>
              <%= u.label "I agree to Terms of Use and Privacy Policy"%>
            </div>

            <div class="form_group sign_up_submit_button">
              <%= u.submit "Sign Up", :class=> 'btn btn-primary',:onclick => "return validateform();" %>
            </div>

        <% end %>

  </div>


</div>

<script type="text/javascript">

    $(document).ready(function(){
        $("#user_zipcode").mask("99999");

        jQuery.validator.addMethod("password", function( value, element ) {
            var result = this.optional(element) || value.length >= 6 && /\d/.test(value) && /[a-z]/i.test(value);
//            if (!result) {
//                element.value = "";
//                var validator = this;
//                setTimeout(function() {
//                    validator.blockFocusCleanup = true;
//                    element.focus();
//                    validator.blockFocusCleanup = false;
//                }, 1);
//            }
            return result;
        }, "Your password must be at least 6 characters long and contain at least one number and one character.");



        $('#new_user').validate({
            rules: {
                "user[email]": { // should be: "user[email]"
                    required: true,
                    email: true
                },

                "user[zipcode]": {
                    required: true
                },
                "user[password]": {
                    required: true
                },
                "user[password_confirmation]": {
                    required: true,
                    equalTo: "#user_password"
                },
                "user[toc]": {
                    required: true
                }


            },
            messages: {
                "user[email]": { // should be: "user[email]"
                    required: "We need your email address to contact you",
                    email: "Your email address must be in the format of name@domain.com"
                },
                "user[toc]": {
                    required: "You must agree to terms of use and privacy policy to register"
                }

            }
        });


    });

    function validateform(){

        if($('.new_user').valid()){
            $.ajax({
                type: "POST",
                url: $('.new_user').attr("action"),
                data: $('.new_user').serialize(),
                success: ajaxsuccess,
                error: ajaxerror,
                dataType: "json"
            });
            return false;
        }
       // alert('validate form');
        //return false;
    }

    function ajaxsuccess(data, textStatus, jqXHR){
        $( "div.sign_up_content" ).replaceWith( "<div class='sign_up_success'><h2>Thanks for registering!</h2><p>In few minutes you will receive an email with instructions on how to complete your registration</p></div>" );
    }

    function ajaxerror(data, textStatus, jqXHR){
        $( "div.sign_up_content" ).replaceWith( "<div class='sign_up_error'><h2>Something went wrong</h2><p>We apologize for this inconvenience. Please try again later!</p></div>" );
    }


</script>
